body{
  background-color: hsl(300, 100%, 10%); /* hsl(300, 100%, 10%) 330033 / #ddddff */
  overflow: hidden;
  color: hsl(180, 100%, 15%);
  margin: 0;
  background: linear-gradient(to bottom, hsl(300, 100%, 5%), hsl(300, 100%, 10%), hsl(300, 100%, 15%));
}

ul{
  list-style: none;
  margin: 10;
  text-align: center;
}

textarea{
  border: none;
  background-color: black;
  color: white;
}

a {
  text-decoration: none;
  color: #ddddff;
}

a.glow, a.glow:hover, a.glow:focus
{
	text-decoration: none;
	color: #eee;
	text-shadow: none;
	-webkit-transition: 300ms linear 0s;
	-moz-transition: 300ms linear 0s;
	-o-transition: 300ms linear 0s;
	transition: 300ms linear 0s;
	outline: 0 none;
}

a.glow:hover, a.glow:focus
{
	text-shadow: -1px 1px 8px #ffc, 1px -1px 8px #fff;
}

.textshadow a.backlit:hover, .textshadow a.backlit:focus
{
	color: black;
}

.turn{
  transform: rotate(-90deg);
}

.clip{
  background: linear-gradient(to bottom, hsl(180, 100%, 25%), hsl(180, 100%, 20%), hsl(180, 100%, 25%));
   background-attachment: fixed;
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
  font-size: 60px;
  font-weight: bold;
  text-align: left;
  text-decoration: none;
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);

}

.wrapper {
  display: flex;
  flex-wrap: wrap;
  grid-template-columns: repeat(5, 1fr);
  gap: 24px;
  padding-top: 10px;
  padding-left: 10px;
  grid-auto-flow: dense;
  overflow: hidden;
  height: 75vh;
  margin:10px;
  -webkit-transform: perspective(2000px) rotateX(40deg) translateY(-10vh);
  -moz-transform: perspective(2000px) rotateX(40deg) translateY(-10vh);
  -ms-transform: perspective(2000px) rotateX(40deg) translateY(-10vh);
  -o-transform: perspective(2000px) rotateX(40deg) translateY(-10vh);
  transform: perspective(2000px) rotateX(40deg) translateY(-10vh);
}

.wrapper::-webkit-scrollbar {
  display: none;
}

.flip-card {
  background-color: transparent;
  width: 300px;
  height: 200px;
  perspective: 1000px;
  margin:0;
  display: inline;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front, .flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  border: 2px solid hsl(180, 100%, 25%);
  border-radius: 15px;
}

.flip-card-front {
  background-color: black;
  color: white;
}

.flip-card-back {
  background-color: black;
  color: white;
  overflow: auto;
  transform: rotateY(180deg);
}

.flip-card-back::-webkit-scrollbar {
    display: none;
}

.CardImage{
  width:200px;
  height:200px;
  border-radius: 75px;
}


.card-wrap{
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: -15vh;
  transform: translatez(-1px);
}

.card{
  border-radius: 15px;
  background: #330033;
  padding: 1.5rem;
  -webkit-box-shadow: -26px 25px 5px 9px rgba(0,0,0,0.59);
  -moz-box-shadow: -26px 25px 5px 9px rgba(0,0,0,0.59);
  box-shadow: -26px 25px 5px 9px rgba(0,0,0,0.59);
  transition: 0.2s;
  border: 2px solid #00ffff99;
  height: 240px;
  width: 160px;
}

.card:not(:first-child) {
  margin-left: -2rem;
}
.card:hover,
.card:focus-within {
  transform: translateY(-1rem) rotate(0.01turn);
}

.card:hover ~ .card { /* subsequent sibling / next card */
  transform: translateX(2rem);
}
.card:focus-within ~ .card { /* subsequent sibling / next card */
  transform: translateX(2rem);
}


.DiceFlex{
  background-color: black;
  border-bottom: 1px solid #00ffff99;
  height: 640;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  align-items: center;
  gap: 4px;
  margin-bottom: -25px;
  padding-bottom: 1em;
  padding-top: 1em;
}

.Dice{
  height: 76px;
  width: 76px;
  text-align: center;
  background-color: rgba(130,0,130,0.8);
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  -webkit-transform: perspective(2000px);
  -moz-transform: perspective(2000px);
  -ms-transform: perspective(2000px);
  -o-transform: perspective(2000px);
  transform: perspective(2000px);
}

.DoubleDice{
  height: 84px;
  width: 84px;
  text-align: center;
  background-color: #00ffff99;
  display: flex;
  justify-content: center;
  align-items: center;
}

div.DoubleDice:hover {
  transform: translateY(-10px);
  filter: drop-shadow(-3px 3px 3px white);
  box-shadow:               /* https://codersblock.com/blog/creating-glow-effects-with-css/ */
  inset 0 0 50px #fff,      /* inner white */
  inset 20px 0 80px #f0f,   /* inner left magenta short */
  inset -20px 0 80px #0ff,  /* inner right cyan short */
  inset 20px 0 300px #f0f,  /* inner left magenta broad */
  inset -20px 0 300px #0ff, /* inner right cyan broad */
}

.circ{
  clip-path: circle(50% at 50% 50%);
}

.squirc{
  clip-path: polygon(50% 0%, 0 90%, 100% 90%);
}

.hexagone{ /* hexagon looks like the outline of a dice at an angle */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
}

.hexagone2{
  clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
}

.the_octagon{ /* straight on from the side, looks like a parallelogram */
  clip-path: polygon(25% 0%, 100% 0%, 75% 100%, 0% 100%);
}

.decagon{ /* "diamond"-like */
  clip-path: polygon(50% 0%, 95% 50%, 50% 100%, 5% 50%);
}

.dodecagon{ /* from the side it looks like a lumpy hexagon */
  clip-path: polygon(25% 0%, 75% 0%, 100% 60%, 75% 100%, 25% 100%, 0 40%);
}

.icosagon{
  clip-path: polygon(1% 1%, 99% 1%, 99% 99%, 1% 99%);
}

.superman{
  clip-path: polygon(20% 20%, 80% 20%, 100% 50%, 50% 100%, 0% 50%);
}
